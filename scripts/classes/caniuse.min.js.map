{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/classes/caniuse.js"],"names":[],"mappingsfile":"caniuse.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*jshint curly: true, eqeqeq: true, immed: true, indent: 4, browser: true, jquery: true, evil: true, regexdash: true, browser: true, trailing: true, sub: true, unused: true, devel: true */\n\n// author: andi smith\n// website: www.andismith.com\n// version: 0.1\n\nvar canIUse = (function () {\n\n    /*  CONFIGURATION =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */\n\n    //  URL to the data feed\n    var SOURCE_DATA_URL = 'https://raw.github.com/Fyrd/caniuse/master/data.json';\n\n    /*  Turn auto run on page load on or off with AUTO_RUN.\n        If you turn it off, just use canIUse.render() to kick it off again.\n        If you don't want the WhenCanIUse data to load in the background, turn BE_READY to false.\n    */\n    var AUTO_RUN = true,\n        BE_READY = true;\n\n    /*  Configure the browsers you want to show here.\n        The order defines the order they will appear on the page.\n\n        Browser options are:\n        * android   - Android\n        * and_ff    - Android Firefox\n        * and_chr   - Android Chrome\n        * bb        - Blackberry\n        * chrome    - Google Chrome\n        * firefox   - Mozilla Firefox\n        * ie        - Internet Explorer\n        * ios_saf   - iOS Safari\n        * opera     - Opera\n        * op_mini   - Opera Mini\n        * op_mob    - Opera Mobile\n        * safari    - Apple Safari\n    */\n    var BROWSERS = ['chrome', 'firefox', 'ie', 'edge', /*'opera',*/ 'safari'];\n\n    //  Customise HTML here\n    var TMPL_TITLE = '<h2>{title}</h2>', // feature title {title}\n        TMPL_STATUS = '<p class=\"status\">{status}</p>', // feature status (W3C Recommendation) {status}\n        TMPL_DESCRIPTION = '<p>Suportado a partir de:</p>', // description to user\n        TMPL_DESKTOP_TITLE = '', // desktop header\n        TMPL_MOBILE_TITLE = '', // mobile header\n        TMPL_SUPPORT_WRAPPER = '<ul class=\"agents\">{items}</ul>', // support wrapper {items}\n        TMPL_SUPPORT = '<li title=\"{browser} - {support}\" class=\"icon-{browsercode} {supportcode}\"><span class=\"version\">{version}{prefixed}</span></li>',\n        TMPL_PREFIX_NOTE = '<p>* requer prefixo.</p>',\n        TMPL_LEGEND = '<ul class=\"legend\"><li>Legen.:</li><li class=\"y\">Sim</li><li class=\"n\">Não</li><li class=\"a\">Parcial</li><li class=\"p\">Polyfill</li></ul>',\n        TMPL_FOOTER = '<p class=\"stats\">Dados de <a href=\"https://caniuse.com/#feat={feature}\" target=\"_blank\">caniuse.com</a></p>',\n        TMPL_LOADING = '<h2>Carregando</h2>',\n        TMPL_ERROR = '<h2>Erro</h2><p>Feature \"{feature}\" não encontrada!</p>';\n\n    /* END CONFIGURATION =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */\n\n    var canIUseData, // store data for multiple uses.\n        storeElementId, // temp storage for elementId if we need to JSONP request\n        populateOnLoad; // temp storage for if we should populate\n\n\n\n    // get feature data based on feature name\n    function getFeature(featureName) {\n        featureName = featureName.toLowerCase();\n        if (canIUseData.query) {\n            return canIUseData.query.results.json.data[featureName];\n        } else if (canIUseData.data) {\n            return canIUseData.data[featureName];\n        } else {\n            return null;\n        }\n    }\n\n    // get the full text description for the support status\n    function getSupportStatus(key) {\n        var status = {\n            \"y\": \"Yes\",\n            \"x\": \"With Prefix\",\n            \"n\": \"No\",\n            \"a\": \"Partial Support\",\n            \"p\": \"Polyfill\",\n            \"u\": \"Unknown\"\n        };\n\n        return status[key];\n    }\n\n    // get the specification status\n    function getSpecStatus(key) {\n        var status = {\n            \"rec\": \"W3C Recommendation\",\n            \"pr\": \"W3C Proposed Recommendation\",\n            \"cr\": \"W3C Candidate Recommendation\",\n            \"wd\": \"W3C Working Draft\",\n            \"other\": \"Non-W3C, but Reputable\",\n            \"unoff\": \"Unofficial or W3C 'Note'\"\n        };\n\n        return status[key] || \"Unknown\";\n    }\n\n    // find the first version that had this status\n    function find(needle, haystack) {\n\n        var result = {\n                \"version\": -1,\n                \"prefixed\": false\n            },\n            compare = -1;\n\n        for (var item in haystack) {\n            if (haystack.hasOwnProperty(item) && haystack[item].indexOf(needle) > -1) {\n                // some browser versions are formatted n-n, take the first number for comparison\n                compare = parseFloat(item.split('-')[0]);\n                // is this version lower than the current version we have stored?\n                if (result.version === -1 || result.version > compare) {\n                    result.version = compare;\n                    result.prefixed = (haystack[item].indexOf('x') > -1);\n                }\n            }\n        }\n        return result;\n    }\n\n    function findSupport(browserData) {\n        var status = ['y', 'a', 'p'],\n            result = {};\n        // find what support is available for this browser\n        for (var i = 0; i < status.length; i++) {\n            result = find(status[i], browserData);\n            if (result.version !== -1) {\n                return {\n                    'result': status[i], // what type of support\n                    'prefixed': result.prefixed,\n                    'version': (result.version !== '0') ? result.version : '0' // the version with that support\n                };\n            }\n        }\n        return {\n            'result': 'n',\n            'prefixed': false,\n            'version': 'No'\n        };\n    }\n\n    /* put the data in a more platable format */\n    function generateResults(feature) {\n        var agents = {},\n            results = {},\n            currentBrowser = '',\n            support = {};\n\n        agents = canIUseData.agents || canIUseData.query.results.json.agents;\n\n        results.title = feature.title; // feature name\n        results.code = feature; // feature code?\n        results.status = getSpecStatus(feature.status); // feature specification status\n        results.agents = [];\n\n        for (var i = 0, l = BROWSERS.length; i < l; i++) {\n\n            currentBrowser = BROWSERS[i];\n\n            if (agents[currentBrowser]) {\n\n                support = findSupport(feature.stats[BROWSERS[i]]);\n\n                results.agents.push({\n                    \"browsercode\": currentBrowser,\n                    \"prefixed\": support.prefixed,\n                    \"supportcode\": support.result,\n                    \"support\": getSupportStatus(support.result),\n                    \"title\": agents[currentBrowser].browser,\n                    \"type\": agents[currentBrowser].type.toLowerCase(),\n                    \"version\": support.version\n                });\n            }\n        }\n\n        return results;\n    }\n\n\n    function generateHtml(results) {\n\n        var html = '',\n            resultHtml = '',\n            desktopHtml = '',\n            mobileHtml = '',\n            prefixes = false,\n            result = {},\n            i = 0,\n            l = 0;\n\n        resultHtml = TMPL_TITLE.replace('{title}', results.title);\n        resultHtml += TMPL_STATUS.replace('{status}', results.status);\n        resultHtml += TMPL_DESCRIPTION;\n\n        for (i = 0, l = results.agents.length; i < l; i++) {\n            result = results.agents[i]; // simply things\n\n            // we need to show that prefix notice, captain\n            if (result.prefixed) {\n                prefixes = true;\n            }\n\n            html = TMPL_SUPPORT.replace(/\\{browsercode\\}/g, result.browsercode)\n                                    .replace(/\\{prefixed\\}/g, (result.prefixed === true) ? '*' : '')\n                                    .replace(/\\{supportcode\\}/g, result.supportcode)\n                                    .replace(/\\{support\\}/g, result.support)\n                                    .replace(/\\{browser\\}/g, result.title)\n                                    .replace(/\\{version\\}/g, result.version);\n\n            if (result.type === 'desktop') {\n                desktopHtml += html;\n            } else if (result.type === 'mobile') {\n                mobileHtml += html;\n            }\n        }\n\n        // only show if we are including desktop browsers\n        if (desktopHtml !== '') {\n            resultHtml += TMPL_DESKTOP_TITLE;\n            resultHtml += TMPL_SUPPORT_WRAPPER.replace(/\\{items\\}/g, desktopHtml);\n        }\n\n        // only show if we are including mobile browsers\n        if (mobileHtml !== '') {\n            resultHtml += TMPL_MOBILE_TITLE;\n            resultHtml += TMPL_SUPPORT_WRAPPER.replace(/\\{items\\}/g, mobileHtml);\n        }\n\n        if (prefixes) {\n            resultHtml += TMPL_PREFIX_NOTE;\n        }\n\n        resultHtml += TMPL_LEGEND;\n        resultHtml += TMPL_FOOTER.replace(/\\{feature\\}/g, results.featureCode);\n        return resultHtml;\n    }\n\n    function generate(elementId) {\n        var $canIUse = [],\n            $instance,\n            featureCode = '',\n            feature = {},\n            result = {},\n            i = 0,\n            l = 0;\n\n        if (typeof elementId === \"undefined\") {\n            $canIUse = document.querySelectorAll('.caniuse');\n        } else {\n            $canIUse.push(document.getElementById(elementId));\n        }\n\n        l = $canIUse.length;\n\n        for (i = 0; i < l; i++) {\n            $instance = $canIUse[i];\n            featureCode = $instance.getAttribute('data-feature') || 'unknown';\n            feature = getFeature(featureCode);\n            if (feature) {\n                result = generateResults(feature);\n                result.featureCode = featureCode;\n                $instance.innerHTML = generateHtml(result);\n            } else {\n                $instance.innerHTML = TMPL_ERROR.replace(/\\{feature\\}/g, featureCode);\n            }\n        }\n    }\n\n    function showLoading(elementId) {\n        var $canIUse = [],\n            $instance,\n            i = 0,\n            l = 0;\n\n        if (typeof elementId === \"undefined\") {\n            $canIUse = document.querySelectorAll('.caniuse');\n        } else {\n            $canIUse.push(document.getElementById(elementId));\n        }\n\n        l = $canIUse.length;\n\n        for (i = 0; i < l; i++) {\n            $instance = $canIUse[i];\n            $instance.innerHTML = TMPL_LOADING;\n        }\n    }\n\n    /*\n     * Load the data that will be used to display information.\n     */\n    function loadData(elementId, populate) {\n        var url = '',\n            script = document.createElement('SCRIPT');\n\n        url = 'https://query.yahooapis.com/v1/public/yql?q=' +\n            'select * from json where url = \\'' + SOURCE_DATA_URL + '\\'' +\n            '&format=json&jsonCompat=new&callback=canIUseDataLoaded';\n\n        // remember these for when our JSONP returns\n        storeElementId = elementId;\n        populateOnLoad = populate;\n\n        script.src = url;\n        document.body.appendChild(script);\n    }\n\n    function populate(elementId) {\n        if (typeof canIUseData === 'undefined') {\n            showLoading(elementId);\n            loadData(elementId, true);\n        } else {\n            generate(elementId);\n        }\n    }\n\n    /*\n     * Public Methods\n     */\n    return {\n        render: populate,\n        dataLoaded: function (data) {\n            canIUseData = data;\n            if (populateOnLoad) {\n                generate(storeElementId);\n            }\n        },\n        init: (function () {\n            if (AUTO_RUN) {\n                populate();\n            } else if (BE_READY) {\n                loadData(undefined, false);\n            }\n        })()\n    };\n}());\n\nwindow.canIUseDataLoaded = function canIUseDataLoaded(data) {\n    canIUse.dataLoaded(data);\n};\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}